/*!
 * theApi - main.js
 * Copyright(c) 2019 bruian <bruianio@gmail.com>
 * Apache-2.0 Licensed
 */

/*
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è async —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ koa: https://koajs.com
 * –†–æ—É—Ç–∏–Ω–≥ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π middleware koa-router: https://www.npmjs.com/package/koa-router
 * JWT –¥–µ–∫–æ–¥–∏—Ä—É–µ—Ç—Å—è –∏ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ state.user –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º koa-jwt: https://github.com/koajs/jwt
 * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ HTML —à–∞–±–ª–æ–Ω–æ–≤ –≤ –æ—Ç–≤–µ—Ç–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞ koa-ejs: https://github.com/koajs/ejs
 * –í—ã–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–º koa-static: https://github.com/koajs/static
 * –ü–∞—Ä—Å–µ—Ä post body —É HTTP –∑–∞–ø—Ä–æ—Å–∞ koa-bodyparser: https://github.com/koajs/bodyparser
 */
const Koa = require('koa');
const Router = require('koa-router');
const render = require('koa-ejs');
const serve = require('koa-static');
const bodyParser = require('koa-bodyparser');
const path = require('path');
const cors = require('@koa/cors');
require('dotenv').config({ path: './dev.env' });
require('./db/postgres');

/* –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */
const config = require('./config');

const apiModule = require('./apis/api');

function createApp() {
  const app = new Koa();
  const router = new Router();

  /* –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∞ —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è */
  render(app, {
    root: './src/views',
    layout: 'template',
    viewExt: 'html',
    cache: false,
    debug: false,
  });

  /* –í koa middleware –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã layers –∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–º app.use */

  /* –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ JWT, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ HTTP Header Authorization */
  // router.use(
  //   jwtMiddleware({secret: config.tokenSecret}),
  // );

  /* –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–æ—É—Ç–æ–≤ api */
  router.use('/api', apiModule.routes());

  /* –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ä–æ—É—Ç–æ–≤ */
  app.use(cors());

  /* –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —à–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–º–µ—â–µ–Ω—ã –≤ state */
  app.use(async (ctx, next) => {
    ctx.state = ctx.state || {};
    ctx.state.version = config.version;
    ctx.state.secret = config.tokenSecret;
    return next();
  });

  app.use(serve(path.join(__dirname, '../static')));
  app.use(router.allowedMethods());
  app.use(bodyParser());

  /* routes() –æ—Ç–¥–∞–µ—Ç —Å–≤–µ—Ä–Ω—É—Ç—ã–µ compose —Ñ—É–Ω–∫—Ü–∏–µ–π layers, –≥–¥–µ –æ–Ω–∏ –ø–æ–¥–∫–ª—é—á–∞—é—Ç—Å—è –∫ KOA */
  app.use(router.routes());

  return app;
}

if (!module.parent || config.debug) {
  createApp().listen(config.port);
  /* eslint-disable no-console */
  console.log(
    `‚úÖ  theApi server v.${
      config.version
    } started ${new Date()} *********************`,
  );
  console.log(`üíª  Server listen to ${config.host}:${config.port}`);
}

module.exports = createApp;
